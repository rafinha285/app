useEffect(()=>{
        console.log(ani)
        const initPlyr = async()=>{
            while (!ref.current?.plyr.elements) {
                await new Promise(resolve => setTimeout(resolve, 100));
            }
            const player = ref.current?.plyr
            console.log(player.elements.wrapper)
            var opIni = ep.openingStart
            var opFim = ep.openinigEnd
            var ed = ep.ending
            
            var skIButton = <SkipButton onClick={()=>handleSkipIntro(opFim)} type={true}></SkipButton>
            var skIn = $(player.elements.controls!).children(".plyr__menu")
            $(skIButton).prop("id","intro")
            $(skIButton).insertAfter(skIn)
            var intr = $(player.elements.controls!).children("#intro")
            var skEButton = $(<SkipButton onClick={()=>handleNextEp(ep.index)} type={false}></SkipButton>).prop("id","outro")
            skEButton.insertAfter(intr)
            var seasonEp = ani.seasons?.find((v)=>v._id === seasonId)?.episodes!
            
            function handleTimeUpdate(){
                var sec = player.currentTime
                
                if(sec >=opIni && sec <=opFim && !(Math.min(...seasonEp.map((ep)=>ep.index)) == ep.index) ){
                    $(skIButton).addClass("skip-active")
                }else{
                    $(skIButton).removeClass("skip-active")
                }

                if(sec >= ed){
                    if(Math.max(...seasonEp.map((ep)=>ep.index)) == ep.index){
                        skEButton.removeClass("skip-active")
                    }else{
                        skEButton.addClass("skip-active")
                    }
                }else{
                    skEButton.removeClass('skip-active')
                }
            }
            player.on("timeupdate",(e)=>handleTimeUpdate())
        }
        initPlyr()
    },[ani, seasonId, ep])
    console.log(ep)
    return(
        <Plyr
        ref={ref}
        source={{
            type:"video",
            sources:[
                {
                    src:`/api/ep/${ani._id}/${seasonId}/${ep._id}/${ep._id}-1080.mp4`,
                    type: 'video/mp4', // Supondo que o tipo seja sempre mp4.
                    size:1080
                },
                
            ],
            poster:`/api/ep/${ani._id}/${seasonId}/${ep._id}/${ep._id}.jpg`,
            tracks:[
                {
                    kind:"captions",
                    label:"Português",
                    srcLang:'pt-br',
                    src:`/api/ep/${ani._id}/${seasonId}/${ep._id}/${ep._id}-por.vtt`,
                    default: true
                },
                {
                    kind:"captions",
                    label:"Inglês",
                    srcLang:'en',
                    src:`/api/ep/${ani._id}/${seasonId}/${ep._id}/${ep._id}-eng.vtt`,
                },
                {
                    kind:"captions",
                    label:"Espanhol",
                    srcLang:'es',
                    src:`/api/ep/${ani._id}/${seasonId}/${ep._id}/${ep._id}-spa.vtt`,
                },
            ]
        }} 
        options={{
            settings:['quality','speed','loop',"captions"],
            autoplay:false,
            keyboard:{focused:true,global:true},
            storage:{ enabled: true, key: 'plyr' }
        }}></Plyr>
    )